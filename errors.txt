============ ERROR 1 ============
after i have changed my default database from sqlite3 to postgresql
i have successfully dumped the data at this point to a JSON file, 
but when i run py manage.py migrate
i keep getting the error:
...
psycopg2.errors.CannotCoerce: cannot cast type time without time zone to timestamp with time zone
LINE 1: ...ted" TYPE timestamp with time zone USING "created"::timestam...

The above exception was the direct cause of the following exception:
...
django.db.utils.ProgrammingError: cannot cast type time without time zone to timestamp with time zone
LINE 1: ...ted" TYPE timestamp with time zone USING "created"::timestam...

============ SOLUTION TO ERROR 1 ============
Apparently the issue was in my migration file where there were incorrect field 
definitions for the publish, created, and updated fields. They are currently 
defined as TimeField instead of DateTimeField. This is causing the error when 
attempting to cast time without time zone to timestamp with time zone

so i manually replaced the TimeField with DateTimeField

NB:The error happened when i mistakenly run migrations with DateTimeFields defined 
as TimeField in the models.py file

============ ============ ============ ============



============ ============ ============ ============
ERROR 2
After moving to postgresql iam getting the error:
AttributeError at /admin/blog/post/8/change/
'datetime.time' object has no attribute 'date'
on each and every post probably due to TimeField error before

SOLUTION TO ERROR 2 
Since these errors persisted in almost every POST model
I manually DROPED the Blog database in postgresql

============ ============ ============ ============




============ ============ ============ ============
MERGING ERROR
I have faced merging error and failed to resolve merging conflicts in the files-
blog/__pycache__/sitemaps.cpython-311.pyc,
db.sqlite3,
my_blog/__pycache__/settings.cpython-311.pyc,
my_blog/__pycache__/urls.cpython-311.pyc

SOLUTION TO MERGING ERROR
Merge conflicts in files like __pycache__ files and db.sqlite3 
are common when working with version control systems like Git, 
but they should not be merged manually. 
These files are generated automatically and should not be included 
in version control in the first place. 
Hereâ€™s how you can resolve these conflicts:

Step 1: Remove the files from the repository
git rm --cached blog/__pycache__/sitemaps.cpython-311.pyc
git rm --cached db.sqlite3
git rm --cached my_blog/__pycache__/settings.cpython-311.pyc
git rm --cached my_blog/__pycache__/urls.cpython-311.pyc

Step 2: Add these files to .gitignore
# Ignore Python cache files
__pycache__/
*.pyc

# Ignore SQLite database
db.sqlite3

Step 3: Commit the changes
git add .gitignore
git commit -m "Remove pycache and database files from version control and add them to .gitignore"
============ ============ ============ ============
